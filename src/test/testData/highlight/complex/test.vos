schema std {

}

namespace .;

primitive u8 {
    bind.rust: {
        rust: {"", ""},
        javascript:
    }
}

primitive ipv4 {
    bind: {
        rust: {
            type: "std::net::Ipv4Addr",
            link: "https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html"
        }
    }
}

extern ipv4 {
    .bind: {

    }
}

/// Tags for the product
property tags: array {
    minItems: 1,
    uniqueItems: true
    "items": {
        "type": "string"
    }
}

class Tags: [] {
    .min_items: 1,
    .unique_items: true,
}

class MINS: string {
    .min_length: 2,
    .max_length: 3,
}

struct Color {
    r: u8,
    g: u8,
    b: u8,
}

class Tith: i32 {
    .multiple_of: 10,
}

title = "the title",
version = "0.0",
description = "My API",
license = @License(name = "Apache 2.0", url = "http://foo.bar"),
contact = @Contact(url = "http://gigantic-server.com", name = "Fred", email = "Fred@gigagantic-server.com")
service {
    target: {
        language: "rust",
        title: "the title",
        version: "0.0",


    }
}